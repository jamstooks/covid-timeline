{"version":3,"sources":["theme/colors.js","theme/index.js","components/Map.js","hooks/useTimer.js","components/DateSlider.js","hooks/useKeyPress.js","data/global.js","components/Chart.js","components/LoadingIndicator.js","components/EventMessage.js","components/Events.js","components/Header.js","components/Footer.js","data/utils.js","data/index.js","App.js","index.js"],"names":["colors","Object","objectSpread2","cases","deaths","chartColors","theme","createMuiTheme","palette","primary","main","secondary","useStyles","makeStyles","_mapContainer","mapContainer","width","defineProperty","breakpoints","down","height","up","Map","_ref","data","useRef","_useState","useState","_useState2","slicedToArray","renderedMap","setRenderedMap","classes","useEffect","map","mapboxgl","container","current","style","center","zoom","interactive","on","addSource","type","url","addLayer","id","source","source-layer","paint","fill-color","layout","line-color","line-width","bounds","fitBounds","window","addEventListener","expression","forEach","row","color","push","setPaintProperty","react_default","a","createElement","ref","className","accessToken","process","useTimer","callback","_ref$delay","delay","_ref$active","active","isActive","setIsActive","savedCallback","interval","setInterval","clearInterval","root","padding","DateSlider","date","setDate","dates","_useTimer","isLast","getIndex","toggleTimer","incrementDate","_useTimer2","keyFuncs","onKeyDown","event","keyCode","console","log","stopPropagation","loaded","removeEventListener","useKeyPress","32","handlePlayClick","37","stopTimer","39","index","Number","indexOf","length","increment","arguments","undefined","newIndex","getDisplayText","ts","format","max","Grid","wrap","direction","justify","alignItems","spacing","item","IconButton","aria-label","onClick","Pause_default","PlayArrow_default","xs","zeroMinWidth","Slider","value","onChange","newValue","marks","min","valueLabelDisplay","aria-labelledby","valueLabelFormat","t","getAriaValueText","COMPARE_COUNTRIES","processGlobalSet","dataSet","filtered","_","filter","c","intersection","consolidated","mergeProvinces","mapDates","countries","reduce","acc","country","Lat","Long","objectWithoutProperties","keys","reduced","countryName","parse","Date","getTime","toggle","paddingRight","textAlign","chart","Chart","setDataSet","lines","i","es6","key","dataKey","stroke","dot","Fragment","margin","top","right","left","bottom","strokeDasharray","domain","scale","tickFormatter","x","tickCount","orientation","y","numeral","toUpperCase","formatter","tooltipFormatter","labelFormatter","d","isAnimationActive","iconType","v","startCase","Switch","prev","name","n","paddingTop","LoadingIndicator","CircularProgress","card","maxWidth","quote","fontStyle","marginBottom","trump","EventMessage","React","forwardRef","props","_JSON$parse","JSON","message","person","Card","variant","Typography","gutterBottom","component","display","Events","events","enqueueSnackbar","useSnackbar","dateString","stringify","preventDuplicate","EventProvider","_ref2","children","build","maxSnack","anchorOrigin","vertical","horizontal","content","components_EventMessage","header","backgroundColor","fontFamily","Header","Link","href","GitHub_default","colorStops","range","Math","pow","concat","toConsumableArray","Infinity","getColor","state","sortedIndex","error","useData","setData","stateCounts","states","s","dateList","sort","USTotals","caseCount","sum","deathCount","sortedDates","caseRow","find","deathRow","App","_data2","chartData","mapData","ThemeProvider","Events_EventProvider","CssBaseline","Footer_Header","rootElement","document","getElementById","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.48f909cb.chunk.js","sourcesContent":["// import { generateAdaptiveTheme } from \"@adobe/leonardo-contrast-colors\";\n// import _ from \"lodash\";\n\n\n// Disabling until leonardo release\n// const ratios = _.range(1.2, 2.6, 0.1);\n\n// const themeColors = generateAdaptiveTheme({\n//   baseScale: \"Cases\",\n//   colorScales: [\n//     {\n//       name: \"Cases\",\n//       colorKeys: [\"#206993\"],\n//       colorspace: \"CAM02\",\n//       ratios: ratios\n//     },\n//     {\n//       name: \"Deaths\",\n//       colorKeys: [\"#ed553b\", \"#de0a03\"],\n//       colorspace: \"CAM02\",\n//       ratios: ratios\n//     }\n//   ],\n//   brightness: \"100\",\n//   contrast: \"3.83\"\n// }).reduce((acc, c) => {\n//   if (\"name\" in c) {\n//     acc[c.name.toLowerCase()] = c.values.map(v => v.value);\n//   }\n//   return acc;\n// }, {});\n\nconst themeColors = {\n  cases: [\n    \"#b5c4cf\",\n    \"#9eb3c2\",\n    \"#8ba6b9\",\n    \"#7b9bb1\",\n    \"#6e91ab\",\n    \"#6189a6\",\n    \"#5683a1\",\n    \"#4a7c9d\",\n    \"#40779a\",\n    \"#367297\",\n    \"#2a6d95\",\n    \"#206992\",\n    \"#23648b\",\n    \"#246084\"\n  ],\n  deaths: [\n    \"#f4b2a3\",\n    \"#f39985\",\n    \"#f2836c\",\n    \"#f06f56\",\n    \"#ee5e44\",\n    \"#eb4d34\",\n    \"#e73e27\",\n    \"#e32d19\",\n    \"#e0180a\",\n    \"#d81206\",\n    \"#cc1a0c\",\n    \"#c11f0f\",\n    \"#b72212\",\n    \"#af2414\"\n  ]\n};\n\nexport const colors = {\n  ...themeColors,\n  chartColors: [\n    \"#173f5f\",\n    \"#20639b\",\n    \"#3caea3\",\n    \"#f6d55c\",\n    \"#ed553b\",\n    \"#d0021b\",\n    \"#899e2a\",\n    \"#6f6f96\"\n  ]\n};\n","import { createMuiTheme } from \"@material-ui/core/styles\";\n\nimport { colors } from \"./colors\";\n\nexport const theme = createMuiTheme({\n  palette: {\n    primary: { main: colors.cases[7] },\n    secondary: { main: colors.deaths[7] }\n  }\n});\n\nexport { colors };\n","import React, { useEffect, useRef, useState } from \"react\";\nimport mapboxgl from \"mapbox-gl\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles(theme => ({\n  mapContainer: {\n    width: \"100%\",\n    [theme.breakpoints.down(\"sm\")]: {\n      height: \"33vh\"\n    },\n    [theme.breakpoints.up(\"md\")]: {\n      height: \"42vh\"\n    }\n  }\n}));\n\nmapboxgl.accessToken = process.env.REACT_APP_MAPBOX_TOKEN;\n\n\nexport default function Map({ data }) {\n  const mapContainer = useRef(null);\n  const [renderedMap, setRenderedMap] = useState();\n  const classes = useStyles();\n\n  // Load the map\n  useEffect(() => {\n    if (!renderedMap) {\n      const map = new mapboxgl.Map({\n        container: mapContainer.current,\n        style: \"mapbox://styles/jamstooks/ck8wbxsdc0i6c1ipbwnxatah0\",\n        center: [-96, 36.5],\n        zoom: 1,\n        interactive: false\n      });\n\n      map.on(\"load\", () => {\n        map.addSource(\"states\", {\n          type: \"vector\",\n          url: \"mapbox://mapbox.us_census_states_2015\"\n        });\n\n        // Add layer from the vector tile source with data-driven style\n        map.addLayer({\n          id: \"state-fills\",\n          type: \"fill\",\n          source: \"states\",\n          \"source-layer\": \"states\",\n          paint: {\n            \"fill-color\": \"#bbbbbb\"\n          }\n        });\n        map.addLayer({\n          id: \"state-borders\",\n          type: \"line\",\n          source: \"states\",\n          \"source-layer\": \"states\",\n          layout: {},\n          paint: {\n            \"line-color\": \"#ffffff\",\n            \"line-width\": 1\n          }\n        });\n\n        const bounds = [[-127, 50], [-65, 23]];\n        map.fitBounds(bounds);\n        window.addEventListener(\"resize\", () => map.fitBounds(bounds));\n        setRenderedMap(map);\n      });\n    }\n  }, [renderedMap]);\n\n  // Load the data\n  useEffect(() => {\n    if (renderedMap) {\n      var expression = [\"match\", [\"get\", \"STATE_NAME\"]];\n\n      // // Calculate color for each state based\n      data.forEach(function(row) {\n        var color = row[\"color\"];\n        expression.push(row[\"state\"], color);\n      });\n      expression.push(\"#eeeeee\");\n\n      renderedMap.setPaintProperty(\"state-fills\", \"fill-color\", expression);\n    }\n  }, [renderedMap, data]);\n\n  return <div ref={mapContainer} className={classes.mapContainer} />;\n}\n","import { useState, useEffect, useRef } from \"react\";\n\nconst useTimer = ({ callback, delay = 400, active = false }) => {\n  const [isActive, setIsActive] = useState(active);\n  const savedCallback = useRef();\n\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  const toggle = () => {\n    setIsActive(!isActive);\n  };\n\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n\n    let interval = null;\n    if (isActive) {\n      interval = setInterval(tick, delay);\n    } else if (!isActive) {\n      clearInterval(interval);\n    }\n    return () => clearInterval(interval);\n  }, [isActive, delay]);\n\n  return [isActive, toggle];\n};\n\nexport default useTimer;\n","import React from \"react\";\nimport { format } from \"date-fns\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport Grid from \"@material-ui/core/Grid\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport PauseIcon from \"@material-ui/icons/Pause\";\nimport PlayArrowIcon from \"@material-ui/icons/PlayArrow\";\nimport Slider from \"@material-ui/core/Slider\";\n\nimport useKeyPress from \"../hooks/useKeyPress\";\nimport useTimer from \"../hooks/useTimer\";\n\nconst useStyles = makeStyles({\n  root: {\n    width: \"100\",\n    padding: \"1em 6em 1em 1em\",\n  },\n});\n\nexport default function DateSlider({ date, setDate, dates }) {\n  const classes = useStyles();\n  const [isActive, toggleTimer] = useTimer({\n    callback: () => {\n      const { isLast } = getIndex();\n      if (isActive && isLast) toggleTimer();\n      // stop at the end\n      else incrementDate();\n    },\n    active: false,\n  });\n  useKeyPress({\n    32: () => handlePlayClick(), // space: pause/play\n    37: () => {\n      stopTimer();\n      incrementDate(-1);\n    }, // back\n    39: () => {\n      stopTimer();\n      incrementDate();\n    }, // forward\n  });\n\n  const getIndex = () => {\n    const index = dates.map(Number).indexOf(+date);\n    const isLast = index === dates.length - 1;\n    return { index, isLast };\n  };\n\n  const handlePlayClick = () => {\n    toggleTimer();\n    if (!isActive) incrementDate();\n  };\n\n  const stopTimer = () => {\n    if (isActive) toggleTimer();\n  };\n\n  const incrementDate = (increment = 1) => {\n    const { index } = getIndex();\n    let newIndex = index + increment;\n    if (newIndex > dates.length - 1) newIndex = 0;\n    if (newIndex < 0) newIndex = dates.length - 1;\n    setDate(dates[newIndex]);\n  };\n\n  const getDisplayText = (ts) => format(dates[ts], \"M/d\");\n\n  const handleChange = (event, newValue) => setDate(dates[newValue]);\n\n  const { index } = getIndex();\n  const max = dates.length - 1;\n\n  return (\n    <div className={classes.root}>\n      <Grid\n        container\n        wrap=\"nowrap\"\n        direction=\"row\"\n        justify=\"space-between\"\n        alignItems=\"center\"\n        spacing={2}\n      >\n        <Grid item>\n          <IconButton aria-label=\"delete\" onClick={handlePlayClick}>\n            {isActive ? <PauseIcon /> : <PlayArrowIcon />}\n          </IconButton>\n        </Grid>\n        <Grid item xs zeroMinWidth>\n          <Slider\n            value={index}\n            onChange={handleChange}\n            color=\"primary\"\n            marks\n            min={0}\n            max={max}\n            valueLabelDisplay=\"on\"\n            aria-labelledby=\"range-slider\"\n            valueLabelFormat={(t) => getDisplayText(t)}\n            getAriaValueText={(t) => getDisplayText(t)}\n          />\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n","import { useEffect } from \"react\";\n\nexport default function useKeyPress(keyFuncs) {\n  const onKeyDown = (event) => {\n    const { keyCode } = event;\n    console.log({ keyCode });\n\n    if (keyCode in keyFuncs) {\n      keyFuncs[keyCode]();\n    }\n    event.stopPropagation();\n  };\n\n  useEffect(() => {\n    let loaded = false;\n    if (!loaded) {\n      window.addEventListener(\"keydown\", onKeyDown);\n      return () => window.removeEventListener(\"keydown\", onKeyDown);\n    }\n    loaded = true;\n  }); // only run on mount\n}\n","import _ from \"lodash\";\nimport { parse } from \"date-fns\";\n\nimport cases from \"./json/global_cases.json\";\nimport deaths from \"./json/global_deaths.json\";\n\nexport const COMPARE_COUNTRIES = [\n  \"United States\",\n  \"China\",\n  \"Korea, South\",\n  \"Spain\",\n  \"Germany\",\n  \"Italy\",\n  \"France\",\n  \"United Kingdom\"\n];\n\nexport const getCountries = () => {\n  return { cases: processGlobalSet(cases), deaths: processGlobalSet(deaths) };\n};\n\nconst processGlobalSet = dataSet => {\n  const filtered = _.filter(\n    dataSet,\n    c => _.intersection([c[\"Country/Region\"]], COMPARE_COUNTRIES).length\n  );\n  const consolidated = mergeProvinces(filtered);\n  return mapDates(consolidated);\n};\n\n// take [\n/// {\"Country/Region\": \"US\", \"Province/State\": \"RI\", \"1/22/20\": 0, \"1/23/20\": 0, ...}\n/// {\"Country/Region\": \"US\", \"Province/State\": \"WA\", \"1/22/20\": 1, \"1/23/20\": 0, ...}\n// ...]\n// convert to {\"US\": {\"1/22/20\": 1, \"1/23/20\": 0, ...}...}\nconst mergeProvinces = countries => {\n  return countries.reduce((acc, c) => {\n    const {\n      \"Country/Region\": country,\n      \"Province/State\": state,\n      Lat,\n      Long,\n      ...dates\n    } = c;\n    if (!(country in acc)) acc[country] = {};\n\n    _.keys(dates).forEach(date => {\n      if (!(date in acc[country])) acc[country][date] = 0;\n      acc[country][date] += dates[date];\n    });\n    return acc;\n  }, {});\n};\n\n// convert {\n//  \"US\": {\"1/22/20\": 0, \"1/23/20\": 1, ...},\n//  \"China\": {\"1/22/20\": 1, \"1/23/20\": 1, ...}\n// ...}\n//\n// to [\n//  {date: \"1/22/20\", \"US\": 0, \"China\": 1},\n//  {date: \"1/22/20\", \"US\": 1, \"China\": 1},\n// ]\nconst mapDates = countries => {\n  // to {'1/22/20': \"us\": 1, 'china': 1} ...\n\n  const reduced = _.keys(countries).reduce((acc, countryName) => {\n    const dates = countries[countryName];\n\n    _.keys(dates).forEach(date => {\n      if (!(date in acc)) acc[date] = {};\n      acc[date] = { ...acc[date], [countryName]: dates[date] };\n    });\n\n    return acc;\n  }, {});\n\n  // return reduced;\n  return _.keys(reduced).map(date => {\n    return {\n      date: parse(date, \"M/d/yy\", new Date()).getTime(),\n      ...reduced[date]\n    };\n  });\n};\n","import React, { useState } from \"react\";\nimport { format } from \"date-fns\";\nimport numeral from \"numeral\";\nimport Switch from \"@material-ui/core/Switch\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n} from \"recharts\";\nimport { startCase } from \"lodash\";\n\nimport { COMPARE_COUNTRIES } from \"../data/global\";\nimport { colors } from \"../theme\";\n\nconst useStyles = makeStyles({\n  toggle: {\n    paddingRight: \"5em\",\n    textAlign: \"right\",\n  },\n  chart: {\n    height: \"30vh\",\n    width: \"100vw\",\n  },\n});\n\nexport default function Chart({ data, date }) {\n  const [dataSet, setDataSet] = useState(\"cases\");\n  const classes = useStyles();\n\n  const lines = COMPARE_COUNTRIES.map((c, i) => {\n    return (\n      <Line\n        key={c}\n        type=\"monotone\"\n        dataKey={c}\n        stroke={colors.chartColors[i % 5]}\n        dot={false}\n      />\n    );\n  });\n\n  const toggleDataSet = () => {\n    setDataSet((prev) => (prev === \"cases\" ? \"deaths\" : \"cases\"));\n  };\n\n  return (\n    <>\n      <div className={classes.chart}>\n        <ResponsiveContainer>\n          <LineChart\n            width={500}\n            height={300}\n            data={data[dataSet]}\n            margin={{\n              top: 5,\n              right: 20,\n              left: 75,\n              bottom: 0,\n            }}\n          >\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis\n              dataKey=\"date\"\n              type=\"number\"\n              domain={[\"dataMin\", \"dataMax\"]}\n              scale=\"linear\"\n              tickFormatter={(x) => format(new Date(x), \"MMM-d\")}\n              tickCount={20}\n            />\n            <YAxis\n              type=\"number\"\n              orientation=\"right\"\n              stroke={colors.cases[7]}\n              tickFormatter={(y) => numeral(y).format(\"0a\").toUpperCase()}\n            />\n            <Tooltip\n              formatter={tooltipFormatter}\n              labelFormatter={(d) => (\n                <strong>{format(new Date(d), \"MMM do\")}</strong>\n              )}\n              isAnimationActive={false}\n            />\n            <Legend\n              iconType=\"plainline\"\n              formatter={(v) => startCase(v)}\n              margin={{ top: 10, left: 0, right: 0, bottom: 0 }}\n            />\n            {lines}\n          </LineChart>\n        </ResponsiveContainer>\n      </div>\n      <div className={classes.toggle}>\n        Cases\n        <Switch onChange={toggleDataSet} color=\"default\" />\n        Deaths\n      </div>\n    </>\n  );\n}\n\nconst numberFormatter = (n) => numeral(n).format(\"0a\").toUpperCase();\n\nconst tooltipFormatter = (value, name) => {\n  return [numberFormatter(value), startCase(name)];\n};\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    textAlign: \"center\",\n    paddingTop: \"30vh\"\n  }\n}));\n\nexport default function LoadingIndicator() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <CircularProgress />\n      <p>Loading Data...</p>\n    </div>\n  );\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { format } from \"date-fns\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Card from \"@material-ui/core/Card\";\n\nimport { colors } from \"../theme\";\n\nconst useStyles = makeStyles(theme => ({\n  card: {\n    maxWidth: 400,\n    padding: \"1em\"\n  },\n  quote: {\n    fontStyle: \"italic\",\n    marginBottom: \"1em\"\n  },\n  right: {\n    textAlign: \"right\"\n  },\n  trump: {\n    textAlign: \"right\",\n    color: colors.deaths[13]\n  }\n}));\n\nconst EventMessage = React.forwardRef((props, ref) => {\n  const classes = useStyles();\n\n  const { date, person, quote, source } = JSON.parse(props.message);\n\n  return (\n    <Card className={classes.card} ref={ref} variant=\"outlined\">\n      <Typography gutterBottom variant=\"h5\" component=\"h2\" color=\"primary\">\n        {format(new Date(date), \"MMMM do\")}\n      </Typography>\n      <Typography className={classes.quote} gutterBottom>\n        \"{quote}\"\n      </Typography>\n      <Typography className={classes.trump}>{person}</Typography>\n      <Typography\n        className={classes.right}\n        color=\"textSecondary\"\n        variant=\"caption\"\n        display=\"block\"\n      >\n        {source}\n      </Typography>\n    </Card>\n  );\n});\n\nEventMessage.propTypes = {\n  id: PropTypes.number.isRequired\n};\n\nexport default EventMessage;\n","import React, { useEffect } from \"react\";\nimport { format } from \"date-fns\";\nimport { SnackbarProvider, useSnackbar } from \"notistack\";\n\nimport EventMessage from \"./EventMessage\";\n\nexport default function Events({ date, events }) {\n  const { enqueueSnackbar } = useSnackbar();\n\n  useEffect(() => {\n    const dateString = format(date, \"M/d/yyyy\");\n    if (dateString in events) {\n      enqueueSnackbar(\n        JSON.stringify({ ...events[dateString], date: date.getTime() }), // preventDuplicate seems to do a string comparison\n        {\n          preventDuplicate: true\n        }\n      );\n    }\n  }, [enqueueSnackbar, date, events]);\n  return null;\n}\n\nexport const EventProvider = ({ children }) => {\n  return (\n    <SnackbarProvider\n      maxSnack={3}\n      anchorOrigin={{\n        vertical: \"top\",\n        horizontal: \"left\"\n      }}\n      content={(key, message) => <EventMessage id={key} message={message} />}\n    >\n      {children}\n    </SnackbarProvider>\n  );\n};\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport { colors } from \"../theme\";\n\nconst useStyles = makeStyles(theme => ({\n  header: {\n    textAlign: \"center\",\n    backgroundColor: colors.cases[10],\n    color: \"white\",\n    padding: \".7em 0 .6em 0\",\n    fontFamily: \"'Roboto', sans-serif\",\n    // textTransform: \"uppercase\"\n  }\n}));\n\nexport default function Header() {\n  const classes = useStyles();\n  return (\n    <div className={classes.header}>\n      <Typography variant=\"h4\" component=\"h1\">\n        U.S. Covid-19 Timeline\n      </Typography>\n    </div>\n  );\n}\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Link from \"@material-ui/core/Link\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\n\nexport default function Header() {\n  return (\n    <Grid\n      container\n      direction=\"row\"\n      justify=\"center\"\n      alignItems=\"center\"\n    >\n      <Grid item>\n        <Typography variant=\"body2\" component=\"h2\">\n          By{\" \"}\n          <Link href=\"https://github.com/jamstooks/\">\n            @jamstooks\n          </Link>\n        </Typography>\n      </Grid>\n      <Grid item>\n        <IconButton\n          aria-label=\"github\"\n          color=\"primary\"\n          href=\"https://github.com/jamstooks/covid-timeline/\"\n        >\n          <GitHubIcon />\n        </IconButton>\n      </Grid>\n    </Grid>\n  );\n}\n","import _ from \"lodash\";\n\nimport { colors } from \"../theme\";\n\nconst colorStops = {\n  cases: _.range(1, 14).map((v, i) => Math.pow(2, i)),\n  deaths: [..._.range(1, 14).map((v, i) => Math.pow(2, i)), Infinity],\n};\n\nexport const getColor = (state) => {\n  if (state.deaths > 0) {\n    let index = _.sortedIndex(colorStops.deaths, state.deaths);\n    let color =\n      colors.deaths[\n        index > colorStops.deaths.length - 1 ? colors.deaths.length - 1 : index\n      ];\n\n    if (!color) {\n      console.error(\"d: \", colorStops.deaths, state.deaths);\n      console.error(color, index, colors.deaths.length);\n    }\n    return color;\n  }\n  if (state.cases > 0) {\n    let index = _.sortedIndex(colorStops.cases, state.cases);\n    let color =\n      colors.cases[\n        index > colorStops.cases.length - 1 ? colors.cases.length - 1 : index\n      ];\n    if (!color) {\n      console.error(\"c: \", colorStops.cases, state.cases);\n      console.error(color, index, colors.cases.length);\n    }\n    return color;\n  }\n  return \"#bbbbbb\";\n};\n","import { useState, useEffect } from \"react\";\nimport { format, parse } from \"date-fns\";\nimport _ from \"lodash\";\n\nimport states from \"./json/states.json\";\nimport events from \"./json/events.json\";\n\nimport { getColor } from \"./utils\";\nimport { getCountries } from \"./global\";\n\n// This should use an API eventually\nexport const useData = () => {\n  const [data, setData] = useState();\n\n  useEffect(() => {\n    if (!data) {\n      // US Data\n\n      // Transform state data to key-values with date keys\n      const stateCounts = states.reduce((acc, state) => {\n        const { date, ...s } = state;\n\n        if (!acc[date]) acc[date] = [];\n        acc[date].push({ ...s, color: getColor(s) });\n        return acc;\n      }, {});\n\n      // Get running global totals from state data\n      const dateList = Object.keys(stateCounts).sort();\n\n      const USTotals = dateList.reduce((acc, d) => {\n        const caseCount = _.sum(stateCounts[d].map(state => state.cases));\n        const deathCount = _.sum(stateCounts[d].map(state => state.deaths));\n        acc[d] = { cases: caseCount, deaths: deathCount };\n        return acc;\n      }, {});\n\n      const sortedDates = dateList.map(d => parse(d, \"yyyy-MM-dd\", new Date()));\n\n      const countries = getCountries();\n\n      // Add US to Countries\n      sortedDates.forEach(date => {\n        const caseRow = _.find(countries.cases, [\"date\", date.getTime()]);\n        if (caseRow)\n          caseRow[\"United States\"] = USTotals[format(date, \"yyyy-MM-dd\")].cases;\n        const deathRow = _.find(countries.deaths, [\"date\", date.getTime()]);\n        if (deathRow)\n          deathRow[\"United States\"] =\n            USTotals[format(date, \"yyyy-MM-dd\")].deaths;\n      });\n\n      setData([stateCounts, sortedDates, countries, events]);\n    }\n  }, [data]);\n\n  return data;\n};\n","import React, { useState, useEffect } from \"react\";\nimport { format } from \"date-fns\";\nimport { CssBaseline } from \"@material-ui/core\";\nimport { ThemeProvider } from \"@material-ui/core/styles\";\n\nimport { theme } from \"./theme\";\nimport \"./styles.css\";\n\nimport Map from \"./components/Map\";\nimport DateSlider from \"./components/DateSlider\";\nimport Chart from \"./components/Chart\";\nimport LoadingIndicator from \"./components/LoadingIndicator\";\nimport Events, { EventProvider } from \"./components/Events\";\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\n\nimport { useData } from \"./data/\";\n\nexport default function App() {\n  const data = useData();\n  const [date, setDate] = useState();\n\n  useEffect(() => {\n    if (!date && data) {\n      const [, sortedDates] = data;\n      setDate(sortedDates[0]);\n    }\n  }, [data, date]);\n\n  if (!date) return <LoadingIndicator />;\n\n  const [stateCounts, sortedDates, chartData, events] = data;\n\n  const mapData = stateCounts[format(date, \"yyyy-MM-dd\")];\n\n  return (\n    <div className=\"App\">\n      <ThemeProvider theme={theme}>\n        <EventProvider>\n          <CssBaseline />\n          <Header />\n          <Map data={mapData} />\n          <DateSlider date={date} setDate={setDate} dates={sortedDates} />\n          <Chart data={chartData} date={date} />\n          <Events date={date} events={events} />\n          <Footer />\n        </EventProvider>\n      </ThemeProvider>\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}