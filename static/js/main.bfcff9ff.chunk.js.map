{"version":3,"sources":["theme/colors.js","theme/index.js","components/Map.js","hooks/useTimer.js","components/DateSlider.js","hooks/useKeyPress.js","data/global.js","components/Chart.js","components/LoadingIndicator.js","components/EventMessage.js","components/Events.js","theme/background.js","components/Header.js","components/Footer.js","data/utils.js","data/index.js","App.js","index.js"],"names":["colors","Object","objectSpread2","cases","deaths","chartColors","theme","createMuiTheme","palette","primary","main","secondary","useStyles","makeStyles","mapContainer","width","height","Map","_ref","data","useRef","_useState","useState","_useState2","slicedToArray","renderedMap","setRenderedMap","classes","useEffect","map","mapboxgl","container","current","style","center","zoom","interactive","on","addSource","type","url","addLayer","id","source","source-layer","paint","fill-color","layout","line-color","line-width","bounds","fitBounds","window","addEventListener","expression","forEach","row","color","push","setPaintProperty","react_default","a","createElement","ref","className","accessToken","process","useTimer","callback","_ref$delay","delay","_ref$active","active","isActive","setIsActive","savedCallback","interval","setInterval","clearInterval","prev","root","padding","DateSlider","date","setDate","dates","_useTimer","isLast","getIndex","toggleTimer","incrementDate","_useTimer2","keyFuncs","onKeyDown","event","keyCode","stopPropagation","removeEventListener","useKeyPress","32","handlePlayClick","37","handleKeyIncrement","39","d","index","Number","indexOf","length","_","throttle","forward","arguments","undefined","stopTimer","increment","newIndex","getDisplayText","ts","format","max","Grid","wrap","direction","justify","alignItems","spacing","item","IconButton","aria-label","onClick","Pause_default","PlayArrow_default","xs","zeroMinWidth","Slider","value","onChange","newValue","marks","min","valueLabelDisplay","aria-labelledby","valueLabelFormat","t","getAriaValueText","COMPARE_COUNTRIES","processGlobalSet","dataSet","filtered","filter","c","intersection","consolidated","mergeProvinces","mapDates","countries","reduce","acc","country","Lat","Long","objectWithoutProperties","keys","reduced","countryName","defineProperty","parse","Date","getTime","toggle","paddingRight","textAlign","chart","Chart","setDataSet","detectMobile","useMobileDetect","lines","i","es6","key","dataKey","stroke","dot","Fragment","margin","top","right","left","bottom","strokeDasharray","domain","scale","tickFormatter","x","tickCount","orientation","y","numeral","toUpperCase","formatter","tooltipFormatter","labelFormatter","isAnimationActive","isMobile","iconType","v","startCase","Switch","name","n","paddingTop","LoadingIndicator","CircularProgress","card","maxWidth","quote","fontStyle","marginBottom","trump","EventMessage","React","forwardRef","props","_JSON$parse","JSON","message","person","Card","variant","Typography","gutterBottom","component","display","Events","events","enqueueSnackbar","useSnackbar","dateString","stringify","preventDuplicate","EventProvider","_ref2","children","build","maxSnack","anchorOrigin","vertical","horizontal","content","components_EventMessage","getFromPalette","pattern","Trianglify","innerWidth","cell_size","x_colors","y_colors","m","XMLSerializer","serializeToString","svg","k","btoa","concat","header","backgroundColor","fontFamily","backgroundImage","Header","footer","fontSize","marginTop","Container","href","GitHub_default","Link","colorStops","range","Math","pow","toConsumableArray","Infinity","getColor","state","sortedIndex","console","error","useData","setData","stateCounts","states","s","dateList","sort","USTotals","caseCount","sum","deathCount","sortedDates","caseRow","find","deathRow","App","_data2","chartData","mapData","ThemeProvider","Events_EventProvider","CssBaseline","Footer_Header","rootElement","document","getElementById","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.bfcff9ff.chunk.js","sourcesContent":["// import { generateAdaptiveTheme } from \"@adobe/leonardo-contrast-colors\";\n// import _ from \"lodash\";\n\n\n// Disabling until leonardo release\n// const ratios = _.range(1.2, 2.6, 0.1);\n\n// const themeColors = generateAdaptiveTheme({\n//   baseScale: \"Cases\",\n//   colorScales: [\n//     {\n//       name: \"Cases\",\n//       colorKeys: [\"#206993\"],\n//       colorspace: \"CAM02\",\n//       ratios: ratios\n//     },\n//     {\n//       name: \"Deaths\",\n//       colorKeys: [\"#ed553b\", \"#de0a03\"],\n//       colorspace: \"CAM02\",\n//       ratios: ratios\n//     }\n//   ],\n//   brightness: \"100\",\n//   contrast: \"3.83\"\n// }).reduce((acc, c) => {\n//   if (\"name\" in c) {\n//     acc[c.name.toLowerCase()] = c.values.map(v => v.value);\n//   }\n//   return acc;\n// }, {});\n\nconst themeColors = {\n  cases: [\n    \"#b5c4cf\",\n    \"#9eb3c2\",\n    \"#8ba6b9\",\n    \"#7b9bb1\",\n    \"#6e91ab\",\n    \"#6189a6\",\n    \"#5683a1\",\n    \"#4a7c9d\",\n    \"#40779a\",\n    \"#367297\",\n    \"#2a6d95\",\n    \"#206992\",\n    \"#23648b\",\n    \"#246084\"\n  ],\n  deaths: [\n    \"#f4b2a3\",\n    \"#f39985\",\n    \"#f2836c\",\n    \"#f06f56\",\n    \"#ee5e44\",\n    \"#eb4d34\",\n    \"#e73e27\",\n    \"#e32d19\",\n    \"#e0180a\",\n    \"#d81206\",\n    \"#cc1a0c\",\n    \"#c11f0f\",\n    \"#b72212\",\n    \"#af2414\"\n  ]\n};\n\nexport const colors = {\n  ...themeColors,\n  chartColors: [\n    \"#173f5f\",\n    \"#20639b\",\n    \"#3caea3\",\n    \"#f6d55c\",\n    \"#ed553b\",\n    \"#d0021b\",\n    \"#899e2a\",\n    \"#6f6f96\"\n  ]\n};\n","import { createMuiTheme } from \"@material-ui/core/styles\";\n\nimport { colors } from \"./colors\";\n\nexport const theme = createMuiTheme({\n  palette: {\n    primary: { main: colors.cases[7] },\n    secondary: { main: colors.deaths[7] }\n  }\n});\n\nexport { colors };\n","import React, { useEffect, useRef, useState } from \"react\";\nimport mapboxgl from \"mapbox-gl\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  mapContainer: {\n    width: \"100%\",\n    height: \"calc(49vh - 136px)\",\n  },\n}));\n\nmapboxgl.accessToken = process.env.REACT_APP_MAPBOX_TOKEN;\n\nexport default function Map({ data }) {\n  const mapContainer = useRef(null);\n  const [renderedMap, setRenderedMap] = useState();\n  const classes = useStyles();\n\n  // Load the map\n  useEffect(() => {\n    if (!renderedMap) {\n      const map = new mapboxgl.Map({\n        container: mapContainer.current,\n        style: \"mapbox://styles/jamstooks/ck8wbxsdc0i6c1ipbwnxatah0\",\n        center: [-96, 36.5],\n        zoom: 1,\n        interactive: false,\n      });\n\n      map.on(\"load\", () => {\n        map.addSource(\"states\", {\n          type: \"vector\",\n          url: \"mapbox://mapbox.us_census_states_2015\",\n        });\n\n        // Add layer from the vector tile source with data-driven style\n        map.addLayer({\n          id: \"state-fills\",\n          type: \"fill\",\n          source: \"states\",\n          \"source-layer\": \"states\",\n          paint: {\n            \"fill-color\": \"#bbbbbb\",\n          },\n        });\n        map.addLayer({\n          id: \"state-borders\",\n          type: \"line\",\n          source: \"states\",\n          \"source-layer\": \"states\",\n          layout: {},\n          paint: {\n            \"line-color\": \"#ffffff\",\n            \"line-width\": 1,\n          },\n        });\n\n        const bounds = [\n          [-127, 50],\n          [-65, 23],\n        ];\n        map.fitBounds(bounds);\n        window.addEventListener(\"resize\", () => map.fitBounds(bounds));\n        setRenderedMap(map);\n      });\n    }\n  }, [renderedMap]);\n\n  // Load the data\n  useEffect(() => {\n    if (renderedMap) {\n      var expression = [\"match\", [\"get\", \"STATE_NAME\"]];\n\n      // // Calculate color for each state based\n      data.forEach((row) => {\n        var color = row[\"color\"];\n        expression.push(row[\"state\"], color);\n      });\n      expression.push(\"#eeeeee\");\n\n      renderedMap.setPaintProperty(\"state-fills\", \"fill-color\", expression);\n    }\n  }, [renderedMap, data]);\n\n  return <div ref={mapContainer} className={classes.mapContainer} />;\n}\n","import { useState, useEffect, useRef } from \"react\";\n\nconst useTimer = ({ callback, delay = 400, active = false }) => {\n  const [isActive, setIsActive] = useState(active);\n  const savedCallback = useRef();\n\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  const toggle = () => {\n    setIsActive((prev) => !prev);\n  };\n\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n\n    let interval = null;\n    if (isActive) {\n      interval = setInterval(tick, delay);\n    } else if (!isActive) {\n      clearInterval(interval);\n    }\n    return () => clearInterval(interval);\n  }, [isActive, delay]);\n\n  return [isActive, toggle];\n};\n\nexport default useTimer;\n","import React from \"react\";\nimport { format } from \"date-fns\";\nimport _ from \"lodash\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport Grid from \"@material-ui/core/Grid\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport PauseIcon from \"@material-ui/icons/Pause\";\nimport PlayArrowIcon from \"@material-ui/icons/PlayArrow\";\nimport Slider from \"@material-ui/core/Slider\";\n\nimport useKeyPress from \"../hooks/useKeyPress\";\nimport useTimer from \"../hooks/useTimer\";\n\nconst useStyles = makeStyles({\n  root: {\n    width: \"100\",\n    padding: \"1em 6em 1em 1em\",\n  },\n});\n\nexport default function DateSlider({ date, setDate, dates }) {\n  const classes = useStyles();\n  const [isActive, toggleTimer] = useTimer({\n    callback: () => {\n      const { isLast } = getIndex(date);\n      if (isActive && isLast) toggleTimer();\n      // stop at the end\n      else incrementDate();\n    },\n    active: false,\n  });\n  useKeyPress({\n    32: () => handlePlayClick(), // space: pause/play\n    37: () => handleKeyIncrement(false), // back\n    39: () => handleKeyIncrement(), // forward\n  });\n\n  const getIndex = (d) => {\n    const index = dates.map(Number).indexOf(+d);\n    const isLast = index === dates.length - 1;\n    return { index, isLast };\n  };\n\n  const handleKeyIncrement = _.throttle((forward = true) => {\n    stopTimer();\n    incrementDate(forward ? 1 : -1);\n  }, 200);\n\n  const handlePlayClick = () => {\n    toggleTimer();\n    if (!isActive) incrementDate();\n  };\n\n  const stopTimer = () => {\n    if (isActive) toggleTimer();\n  };\n\n  const incrementDate = (increment = 1) => {\n    setDate((prev) => {\n      const { index } = getIndex(prev);\n      let newIndex = index + increment;\n      if (newIndex > dates.length - 1) newIndex = 0;\n      if (newIndex < 0) newIndex = dates.length - 1;\n      return dates[newIndex];\n    });\n  };\n\n  const getDisplayText = (ts) => format(dates[ts], \"M/d\");\n\n  const handleChange = (event, newValue) => setDate(dates[newValue]);\n\n  const { index } = getIndex(date);\n  const max = dates.length - 1;\n\n  return (\n    <div className={classes.root}>\n      <Grid\n        container\n        wrap=\"nowrap\"\n        direction=\"row\"\n        justify=\"space-between\"\n        alignItems=\"center\"\n        spacing={2}\n      >\n        <Grid item>\n          <IconButton aria-label=\"delete\" onClick={handlePlayClick}>\n            {isActive ? <PauseIcon /> : <PlayArrowIcon />}\n          </IconButton>\n        </Grid>\n        <Grid item xs zeroMinWidth>\n          <Slider\n            value={index}\n            onChange={handleChange}\n            color=\"primary\"\n            marks\n            min={0}\n            max={max}\n            valueLabelDisplay=\"on\"\n            aria-labelledby=\"range-slider\"\n            valueLabelFormat={(t) => getDisplayText(t)}\n            getAriaValueText={(t) => getDisplayText(t)}\n          />\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n","import { useEffect } from \"react\";\n\nexport default function useKeyPress(keyFuncs) {\n  const onKeyDown = (event) => {\n    const { keyCode } = event;\n\n    if (keyCode in keyFuncs) {\n      keyFuncs[keyCode]();\n    }\n    event.stopPropagation();\n  };\n\n  useEffect(() => {\n    window.removeEventListener(\"keydown\", onKeyDown);\n    window.addEventListener(\"keydown\", onKeyDown);\n    return () => {\n      window.removeEventListener(\"keydown\", onKeyDown);\n    };\n  }); // only run on mount\n}\n","import _ from \"lodash\";\nimport { parse } from \"date-fns\";\n\nimport cases from \"./json/global_cases.json\";\nimport deaths from \"./json/global_deaths.json\";\n\nexport const COMPARE_COUNTRIES = [\n  \"United States\",\n  \"China\",\n  \"Korea, South\",\n  \"Spain\",\n  \"Germany\",\n  \"Italy\",\n  \"France\",\n  \"United Kingdom\"\n];\n\nexport const getCountries = () => {\n  return { cases: processGlobalSet(cases), deaths: processGlobalSet(deaths) };\n};\n\nconst processGlobalSet = dataSet => {\n  const filtered = _.filter(\n    dataSet,\n    c => _.intersection([c[\"Country/Region\"]], COMPARE_COUNTRIES).length\n  );\n  const consolidated = mergeProvinces(filtered);\n  return mapDates(consolidated);\n};\n\n// take [\n/// {\"Country/Region\": \"US\", \"Province/State\": \"RI\", \"1/22/20\": 0, \"1/23/20\": 0, ...}\n/// {\"Country/Region\": \"US\", \"Province/State\": \"WA\", \"1/22/20\": 1, \"1/23/20\": 0, ...}\n// ...]\n// convert to {\"US\": {\"1/22/20\": 1, \"1/23/20\": 0, ...}...}\nconst mergeProvinces = countries => {\n  return countries.reduce((acc, c) => {\n    const {\n      \"Country/Region\": country,\n      \"Province/State\": state,\n      Lat,\n      Long,\n      ...dates\n    } = c;\n    if (!(country in acc)) acc[country] = {};\n\n    _.keys(dates).forEach(date => {\n      if (!(date in acc[country])) acc[country][date] = 0;\n      acc[country][date] += dates[date];\n    });\n    return acc;\n  }, {});\n};\n\n// convert {\n//  \"US\": {\"1/22/20\": 0, \"1/23/20\": 1, ...},\n//  \"China\": {\"1/22/20\": 1, \"1/23/20\": 1, ...}\n// ...}\n//\n// to [\n//  {date: \"1/22/20\", \"US\": 0, \"China\": 1},\n//  {date: \"1/22/20\", \"US\": 1, \"China\": 1},\n// ]\nconst mapDates = countries => {\n  // to {'1/22/20': \"us\": 1, 'china': 1} ...\n\n  const reduced = _.keys(countries).reduce((acc, countryName) => {\n    const dates = countries[countryName];\n\n    _.keys(dates).forEach(date => {\n      if (!(date in acc)) acc[date] = {};\n      acc[date] = { ...acc[date], [countryName]: dates[date] };\n    });\n\n    return acc;\n  }, {});\n\n  // return reduced;\n  return _.keys(reduced).map(date => {\n    return {\n      date: parse(date, \"M/d/yy\", new Date()).getTime(),\n      ...reduced[date]\n    };\n  });\n};\n","import React, { useState } from \"react\";\nimport { format } from \"date-fns\";\nimport numeral from \"numeral\";\nimport useMobileDetect from \"use-mobile-detect-hook\";\n\nimport Switch from \"@material-ui/core/Switch\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n} from \"recharts\";\nimport { startCase } from \"lodash\";\n\nimport { COMPARE_COUNTRIES } from \"../data/global\";\nimport { colors } from \"../theme\";\n\nconst useStyles = makeStyles({\n  toggle: {\n    paddingRight: \"5em\",\n    textAlign: \"right\",\n  },\n  chart: {\n    height: \"calc(49vh - 124px)\",\n    width: \"100vw\",\n  },\n});\n\nexport default function Chart({ data, date }) {\n  const [dataSet, setDataSet] = useState(\"cases\");\n  const detectMobile = useMobileDetect();\n  const classes = useStyles();\n\n  const lines = COMPARE_COUNTRIES.map((c, i) => {\n    return (\n      <Line\n        key={c}\n        type=\"monotone\"\n        dataKey={c}\n        stroke={colors.chartColors[i % 5]}\n        dot={false}\n      />\n    );\n  });\n\n  const toggleDataSet = () => {\n    setDataSet((prev) => (prev === \"cases\" ? \"deaths\" : \"cases\"));\n  };\n\n  return (\n    <>\n      <div className={classes.chart}>\n        <ResponsiveContainer>\n          <LineChart\n            width={500}\n            height={300}\n            data={data[dataSet]}\n            margin={{\n              top: 5,\n              right: 20,\n              left: 75,\n              bottom: 0,\n            }}\n          >\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis\n              dataKey=\"date\"\n              type=\"number\"\n              domain={[\"dataMin\", \"dataMax\"]}\n              scale=\"linear\"\n              tickFormatter={(x) => format(new Date(x), \"MMM-d\")}\n              tickCount={20}\n            />\n            <YAxis\n              type=\"number\"\n              orientation=\"right\"\n              stroke={colors.cases[7]}\n              tickFormatter={(y) => numeral(y).format(\"0a\").toUpperCase()}\n            />\n            <Tooltip\n              formatter={tooltipFormatter}\n              labelFormatter={(d) => (\n                <strong>{format(new Date(d), \"MMM do\")}</strong>\n              )}\n              isAnimationActive={false}\n            />\n            {!detectMobile.isMobile() && (\n              <Legend\n                iconType=\"plainline\"\n                formatter={(v) => startCase(v)}\n                margin={{ top: 10, left: 0, right: 0, bottom: 0 }}\n              />\n            )}\n            {lines}\n          </LineChart>\n        </ResponsiveContainer>\n      </div>\n      <div className={classes.toggle}>\n        Cases\n        <Switch onChange={toggleDataSet} color=\"default\" />\n        Deaths\n      </div>\n    </>\n  );\n}\n\nconst numberFormatter = (n) => numeral(n).format(\"0a\").toUpperCase();\n\nconst tooltipFormatter = (value, name) => {\n  return [numberFormatter(value), startCase(name)];\n};\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    textAlign: \"center\",\n    paddingTop: \"30vh\"\n  }\n}));\n\nexport default function LoadingIndicator() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <CircularProgress />\n      <p>Loading Data...</p>\n    </div>\n  );\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { format } from \"date-fns\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Card from \"@material-ui/core/Card\";\n\nimport { colors } from \"../theme\";\n\nconst useStyles = makeStyles(theme => ({\n  card: {\n    maxWidth: 400,\n    padding: \"1em\"\n  },\n  quote: {\n    fontStyle: \"italic\",\n    marginBottom: \"1em\"\n  },\n  right: {\n    textAlign: \"right\"\n  },\n  trump: {\n    textAlign: \"right\",\n    color: colors.deaths[13]\n  }\n}));\n\nconst EventMessage = React.forwardRef((props, ref) => {\n  const classes = useStyles();\n\n  const { date, person, quote, source } = JSON.parse(props.message);\n\n  return (\n    <Card className={classes.card} ref={ref} variant=\"outlined\">\n      <Typography gutterBottom variant=\"h5\" component=\"h2\" color=\"primary\">\n        {format(new Date(date), \"MMMM do\")}\n      </Typography>\n      <Typography className={classes.quote} gutterBottom>\n        \"{quote}\"\n      </Typography>\n      <Typography className={classes.trump}>{person}</Typography>\n      <Typography\n        className={classes.right}\n        color=\"textSecondary\"\n        variant=\"caption\"\n        display=\"block\"\n      >\n        {source}\n      </Typography>\n    </Card>\n  );\n});\n\nEventMessage.propTypes = {\n  id: PropTypes.number.isRequired\n};\n\nexport default EventMessage;\n","import React, { useEffect } from \"react\";\nimport { format } from \"date-fns\";\nimport { SnackbarProvider, useSnackbar } from \"notistack\";\n\nimport EventMessage from \"./EventMessage\";\n\nexport default function Events({ date, events }) {\n  const { enqueueSnackbar } = useSnackbar();\n\n  useEffect(() => {\n    const dateString = format(date, \"M/d/yyyy\");\n    if (dateString in events) {\n      enqueueSnackbar(\n        JSON.stringify({ ...events[dateString], date: date.getTime() }), // preventDuplicate seems to do a string comparison\n        {\n          preventDuplicate: true,\n        }\n      );\n    }\n  }, [enqueueSnackbar, date, events]);\n  return null;\n}\n\nexport const EventProvider = ({ children }) => {\n  return (\n    <SnackbarProvider\n      maxSnack={3}\n      anchorOrigin={{\n        vertical: \"top\",\n        horizontal: \"left\",\n      }}\n      content={(key, message) => <EventMessage id={key} message={message} />}\n    >\n      {children}\n    </SnackbarProvider>\n  );\n};\n","import Trianglify from \"trianglify\";\n\nimport { colors } from \"./colors\";\n\nexport const headerBackground = () => {\n  return getFromPalette([\n    colors.cases[11],\n    colors.cases[2],\n    colors.cases[9],\n    colors.deaths[2],\n    colors.cases[13],\n  ]);\n};\n\nexport const footerBackground = () => {\n  return getFromPalette([colors.cases[2], colors.cases[0], colors.cases[1]]);\n};\n\nconst getFromPalette = (palette) => {\n  const pattern = Trianglify({\n    width: window.innerWidth * 1.3,\n    height: 150,\n    cell_size: 50,\n    x_colors: palette,\n    y_colors: false,\n  });\n\n  // Serialize the SVG object to a String\n  var m = new XMLSerializer().serializeToString(pattern.svg());\n\n  // Perform the base64 encoding of the String\n  var k = window.btoa(m);\n\n  // Query the element to set the background image property\n  return `url(\"data:image/svg+xml;base64,${k}\")`;\n};\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport { colors } from \"../theme\";\nimport { headerBackground } from \"../theme/background\";\n\nconst useStyles = makeStyles((theme) => {\n  return {\n    header: {\n      textAlign: \"center\",\n      backgroundColor: colors.cases[10],\n      color: \"white\",\n      padding: \".7em 0 .6em 0\",\n      fontFamily: \"'Roboto', sans-serif\",\n      backgroundImage: headerBackground(),\n    },\n  };\n});\n\nexport default function Header() {\n  const classes = useStyles();\n  return (\n    <div className={classes.header}>\n      <Typography variant=\"h4\" component=\"h1\">\n        U.S. Covid-19 Timeline\n      </Typography>\n    </div>\n  );\n}\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Link from \"@material-ui/core/Link\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\nimport Container from \"@material-ui/core/Container\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport { colors } from \"../theme\";\nimport { footerBackground } from \"../theme/background\";\n\nconst useStyles = makeStyles({\n  footer: {\n    color: colors.cases[13],\n    backgroundColor: colors.cases[0],\n    backgroundImage: footerBackground(),\n    padding: \"1em 0\",\n    margin: 0,\n    fontSize: \".9em\",\n    marginTop: \"1vh\",\n  },\n});\n\nexport default function Header() {\n  const classes = useStyles();\n  return (\n    <div className={classes.footer}>\n      <Container maxWidth=\"md\">\n        <Grid\n          container\n          direction=\"row\"\n          justify=\"space-between\"\n          alignItems=\"center\"\n        >\n          <Grid item>\n            <IconButton\n              aria-label=\"github\"\n              color=\"primary\"\n              href=\"https://github.com/jamstooks/covid-timeline/\"\n            >\n              <GitHubIcon />\n            </IconButton>\n            <Link href=\"https://github.com/jamstooks/covid-timeline/\">\n              @jamstooks\n            </Link>\n          </Grid>\n          <Grid item>\n            <Grid\n              container\n              direction=\"column\"\n              justify=\"center\"\n              alignItems=\"flex-end\"\n            >\n              <Grid item>\n                <Typography>Data Sources:</Typography>\n              </Grid>\n              <Grid item>\n                <Link href=\"https://github.com/nytimes/covid-19-data\">\n                  NY Times (U.S.)\n                </Link>\n              </Grid>\n              <Grid item>\n                <Link href=\"https://github.com/CSSEGISandData/COVID-19\">\n                  Johns Hopkins (Global)\n                </Link>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Container>\n    </div>\n  );\n}\n","import _ from \"lodash\";\n\nimport { colors } from \"../theme\";\n\nconst colorStops = {\n  cases: _.range(1, 14).map((v, i) => Math.pow(2, i)),\n  deaths: [..._.range(1, 14).map((v, i) => Math.pow(2, i)), Infinity],\n};\n\nexport const getColor = (state) => {\n  if (state.deaths > 0) {\n    let index = _.sortedIndex(colorStops.deaths, state.deaths);\n    let color =\n      colors.deaths[\n        index > colorStops.deaths.length - 1 ? colors.deaths.length - 1 : index\n      ];\n\n    if (!color) {\n      console.error(\"d: \", colorStops.deaths, state.deaths);\n      console.error(color, index, colors.deaths.length);\n    }\n    return color;\n  }\n  if (state.cases > 0) {\n    let index = _.sortedIndex(colorStops.cases, state.cases);\n    let color =\n      colors.cases[\n        index > colorStops.cases.length - 1 ? colors.cases.length - 1 : index\n      ];\n    if (!color) {\n      console.error(\"c: \", colorStops.cases, state.cases);\n      console.error(color, index, colors.cases.length);\n    }\n    return color;\n  }\n  return \"#bbbbbb\";\n};\n","import { useState, useEffect } from \"react\";\nimport { format, parse } from \"date-fns\";\nimport _ from \"lodash\";\n\nimport states from \"./json/states.json\";\nimport events from \"./json/events.json\";\n\nimport { getColor } from \"./utils\";\nimport { getCountries } from \"./global\";\n\n// This should use an API eventually\nexport const useData = () => {\n  const [data, setData] = useState();\n\n  useEffect(() => {\n    if (!data) {\n      // US Data\n\n      // Transform state data to key-values with date keys\n      const stateCounts = states.reduce((acc, state) => {\n        const { date, ...s } = state;\n\n        if (!acc[date]) acc[date] = [];\n        acc[date].push({ ...s, color: getColor(s) });\n        return acc;\n      }, {});\n\n      // Get running global totals from state data\n      const dateList = Object.keys(stateCounts).sort();\n\n      const USTotals = dateList.reduce((acc, d) => {\n        const caseCount = _.sum(stateCounts[d].map(state => state.cases));\n        const deathCount = _.sum(stateCounts[d].map(state => state.deaths));\n        acc[d] = { cases: caseCount, deaths: deathCount };\n        return acc;\n      }, {});\n\n      const sortedDates = dateList.map(d => parse(d, \"yyyy-MM-dd\", new Date()));\n\n      const countries = getCountries();\n\n      // Add US to Countries\n      sortedDates.forEach(date => {\n        const caseRow = _.find(countries.cases, [\"date\", date.getTime()]);\n        if (caseRow)\n          caseRow[\"United States\"] = USTotals[format(date, \"yyyy-MM-dd\")].cases;\n        const deathRow = _.find(countries.deaths, [\"date\", date.getTime()]);\n        if (deathRow)\n          deathRow[\"United States\"] =\n            USTotals[format(date, \"yyyy-MM-dd\")].deaths;\n      });\n\n      setData([stateCounts, sortedDates, countries, events]);\n    }\n  }, [data]);\n\n  return data;\n};\n","import React, { useState, useEffect } from \"react\";\nimport { format } from \"date-fns\";\nimport { CssBaseline } from \"@material-ui/core\";\nimport { ThemeProvider } from \"@material-ui/core/styles\";\n\nimport { theme } from \"./theme\";\nimport \"./styles.css\";\n\nimport Map from \"./components/Map\";\nimport DateSlider from \"./components/DateSlider\";\nimport Chart from \"./components/Chart\";\nimport LoadingIndicator from \"./components/LoadingIndicator\";\nimport Events, { EventProvider } from \"./components/Events\";\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\n\nimport { useData } from \"./data/\";\n\nexport default function App() {\n  const data = useData();\n  const [date, setDate] = useState();\n\n  useEffect(() => {\n    if (!date && data) {\n      const [, sortedDates] = data;\n      setDate(sortedDates[0]);\n    }\n  }, [data, date]);\n\n  if (!date) return <LoadingIndicator />;\n\n  const [stateCounts, sortedDates, chartData, events] = data;\n\n  const mapData = stateCounts[format(date, \"yyyy-MM-dd\")];\n\n  return (\n    <div className=\"App\">\n      <ThemeProvider theme={theme}>\n        <EventProvider>\n          <CssBaseline />\n          <Header />\n          <Map data={mapData} />\n          <DateSlider date={date} setDate={setDate} dates={sortedDates} />\n          <Chart data={chartData} date={date} />\n          <Events date={date} events={events} />\n          <Footer />\n        </EventProvider>\n      </ThemeProvider>\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}